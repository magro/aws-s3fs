2012-08-20:
	Added unit test for upload queue.

2012-07-29:
	Doxygen comments brought up to date.
	BeginUpload function split into several independent functions.

2012-07-28:
	Unit tests for filecachedb.c completed.

2012-07-27:
	Upload functionality largely complete, but not yet tested.
	Unit tests for the upload queries begun.

2012-07-19:
	Work begun on upload functionality.

2012-07-18:
	Brought the test suite up to date to account for yesterday's code changes.
	Added "Close File" functionality.

2012-07-17:
	Live download via the download queue tested.
	Milestone met: download via download queue.

2012-07-16:
	TODO: test integration of daemon and frontend.

2012-07-15:
	Daemon unit tests completed.

2012-07-13:
	Unit tests for downloadqueue completed.
	Unit tests for filecache.c completed.
	Daemon startup completed.
	Unit test program for daemon completed.

2012-07-12:
	Additional unit tests for filecache.c created.
	Unit tests for downloadqueue begun.

2012-07-11:
	Unit tests for filecache.c created.

2012-07-10:
	Removed the MKDIR request from the File Cache.
	Added process forking to filecache.c

2012-07-09:
	Documented the aws-s3fs architecture and design.

2012-07-02:
	Enabled threads to block the SIGPIPE signal that occurs if the client
	disconnects.
	Additional work on the download queue.

2012-07-01:
	Temporary file and directory creation requests implemented.
	Work begun on the download queue.

2012-06-30:
    Added CONNECT request to the filecache.
	Added CACHE request to the filecache.
	Server/multiclient communication established.

2012-06-29:
	Work on filecache.

2012-06-28:
	Prepared debian files for library, binary, and development files.
	Separated S3 communication further from S3/FUSE functions.
	Made library multi-user.

2012-06-27:
	Work on file cache client.
	Put shared functions into dynamically linkable library.

2012-06-26:
	Directory cache implemented.

2012-06-25:
	Initial work on sockets and file cache daemon.

2012-06-24:
	Global buffers in s3if.c eliminated, making the module mostly
	reentrant.
	Included original MD5 and SHA1 code in the package.

2012-06-23:
	Bugs fixed in permissions checking.
	"Secret files" identify directories.
	chmod, chown, mkdir, rmdir, delete functionality added.

2012-06-22:
	Walkthrough for memory leaks in s3fs.c.
	Short-file upload functionality added.
	Improved cache performance.
	configfile.c changed to use libgetopt built-in search.
	create symlink functionality added.

2012-06-21:
	readlink functionality added.
	File metadata can be updated.
	utimens functionality added.

2012-06-20:
	S3FileStat finds a file or directory on the S3 drive and places
	the file stat in the stat cache.
	Compiler warning level increased with -Wextra, and #pragma inserted
	in the code where appropriate.
	SubmitS3RequestData tested.
	S3ReadDir implemented and tested.
	README file updated with additional live test setup instructions.

2012-06-19:
	MS4: S3 raw function reads S3 file info correctly.
	Refactored the s3if.c http response and s3if.c host code.

2012-06-18:
	S3GetFileStat begun; first step towards first-level file system.

2012-06-17:
	MS3: First contact with Amazon S3 drive objects.

2012-06-16:
	FUSE interface begun.

2012-06-15:
	added HMAC signature calculation.

2012-06-14:
	added SHA1 message digest calculation functions.

2012-06-12:
	added MD5 message digest calculation functions.
	MD5 digest fully documented and tested.

2012-06-11:
	added optional data self-deletion function to the stat cache deletions.
	statcache.c documented.
	loglevel tested, i.e., logger.c: all functions tested.

2012-06-10:
	singlelist.c removed and replaced with uthash macros.
	daemon.c documented and tested.
	logging added to statcache.c.
	added loglevel option.
	regression tested (including statcache).
	MS2: Daemon version.

2012-06-09:
	work begun on singlelist.c.
	singlelist.c documented and tested.

2012-06-08:
	work begun on daemon.c, logger.c, and fuseif.c.
	logger.c: all functions documented and tested.
	added -f option for foreground (i.e., non-daemon) operation.
	thread safety modifications begun (not that it's really necessary, but
	still).
	  * decodecmdline.c seems thread-safe.
	  * logger.c seems thread-safe.
	  * common.c seems thread-safe.
	  * configfile.c seems thread-safe.
	  * fix-i386-cc.c seems thread-safe.
	  * config.c seems thread-safe.
	  * aws-s3fs.c seems thread-safe.
	  * regression test passed.

2012-06-07:
	slight refactoring of the test functions by adding shared.c.
	config.c: all functions tested.
	decodecmdline.c: all functions documented.
	configfile.c: all functions documented.
	MS1: command-line and configuration file processing part complete.

2012-06-06:
	decodecmdline.c: all functions tested.
	config.c: all functions documented. (Still missing test of Configure.)
	configfile.c: all functions tested.
	Makefiles updated for Doxygen.
	common.c: all functions documented and tested.
